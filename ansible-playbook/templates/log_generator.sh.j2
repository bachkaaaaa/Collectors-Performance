#!/bin/bash

# Ensure script is run with root privileges
if [[ $EUID -ne 0 ]]; then
   echo "This script must be run as root" 
   exit 1
fi

# Log file path
LOG_FILE="{{ log_file_path }}"

# Ensure log directory exists
mkdir -p $(dirname $LOG_FILE)

# Function to generate logs
generate_logs() {
    local log_count=2000
    local timestamp=$(date '+%Y-%m-%d %H:%M:%S')
    
    # Use Python for efficient log generation
    python3 - << EOF
import random
import string

def generate_log_entry():
    # Generate a random log message
    log_levels = ['INFO', 'WARN', 'ERROR', 'DEBUG']
    components = ['WebServer', 'DatabaseService', 'AuthModule', 'NetworkHandler']
    
    level = random.choice(log_levels)
    component = random.choice(components)
    message = ''.join(random.choices(string.ascii_letters + string.digits, k=50))
    
    return f"{timestamp} [{level}] {component}: {message}"

with open('$LOG_FILE', 'a') as f:
    for _ in range($log_count):
        f.write(generate_log_entry() + "\n")
EOF
}

# Infinite loop to generate logs continuously
while true; do
    generate_logs
    sleep 1
done
